"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6026],{9687:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return r},default:function(){return p},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return o}});var s=n(5893),a=n(1151);const i={id:"waitForReplicants",title:"waitForReplicants",sidebar_label:"waitForReplicants"},r=void 0,c={id:"classes/waitForReplicants",title:"waitForReplicants",description:"(static) waitForReplicants(replicants) \u2192 \\{Promise.&lt;any>\\}",source:"@site/docs/classes/waitForReplicants.md",sourceDirName:"classes",slug:"/classes/waitForReplicants",permalink:"/docs/classes/waitForReplicants",draft:!1,unlisted:!1,editUrl:"https://github.com/nodecg/docs/edit/main/docs/classes/waitForReplicants.md",tags:[],version:"current",lastUpdatedBy:"Keiichiro Amemiya",lastUpdatedAt:1736076603,formattedLastUpdatedAt:"Jan 5, 2025",frontMatter:{id:"waitForReplicants",title:"waitForReplicants",sidebar_label:"waitForReplicants"},sidebar:"mainSidebar",previous:{title:"readReplicant",permalink:"/docs/classes/readReplicant"},next:{title:"sendMessage",permalink:"/docs/classes/sendMessage"}},l={},o=[{value:"Parameters",id:"parameters",level:3},{value:"Example",id:"example",level:3}];function d(e){const t={code:"code",em:"em",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.em,{children:"(static)"})," ",(0,s.jsx)(t.code,{children:"waitForReplicants(replicants)"})," ",(0,s.jsx)(t.em,{children:"\u2192 {Promise.<any>}"})]}),"\n",(0,s.jsx)(t.p,{children:"Lets you easily wait for a group of Replicants to finish declaring."}),"\n",(0,s.jsx)(t.p,{children:"Returns a promise which is resolved once all provided Replicants have emitted a change event, which is indicates that they must have finished declaring."}),"\n",(0,s.jsx)(t.p,{children:"This method is only useful in client-side code. Server-side code never has to wait for Replicants."}),"\n",(0,s.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"replicants"}),(0,s.jsx)(t.td,{children:"Replicant"}),(0,s.jsx)(t.td,{children:"Replicant objects to wait for"})]})})]}),"\n",(0,s.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,s.jsx)(t.p,{children:"From a graphic or dashboard panel:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"const rep1 = nodecg.Replicant('rep1');\nconst rep2 = nodecg.Replicant('rep2');\n\n// You can provide as many Replicant arguments as you want,\n// this example just uses two Replicants.\nNodeCG.waitForReplicants(rep1, rep2).then(() => {\n    console.log('rep1 and rep2 are fully declared and ready to use!');\n});\n"})})]})}function p(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:function(e,t,n){n.d(t,{Z:function(){return c},a:function(){return r}});var s=n(7294);const a={},i=s.createContext(a);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);