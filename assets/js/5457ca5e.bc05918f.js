"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1712],{8097:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return r},default:function(){return h},frontMatter:function(){return i},metadata:function(){return o},toc:function(){return c}});var s=t(5893),d=t(1151);const i={id:"nodecg",title:"NodeCG",sidebar_label:"NodeCG"},r=void 0,o={id:"classes/nodecg",title:"NodeCG",description:"new NodeCG(bundle, socket)",source:"@site/docs/classes/nodecg.md",sourceDirName:"classes",slug:"/classes/nodecg",permalink:"/docs/classes/nodecg",draft:!1,unlisted:!1,editUrl:"https://github.com/nodecg/docs/edit/main/docs/classes/nodecg.md",tags:[],version:"current",lastUpdatedBy:"dependabot[bot]",lastUpdatedAt:1737407026,formattedLastUpdatedAt:"Jan 20, 2025",frontMatter:{id:"nodecg",title:"NodeCG",sidebar_label:"NodeCG"},sidebar:"mainSidebar",previous:{title:"1.x \u2192 2.x",permalink:"/docs/migrating/migrating-1.x-to-2.x"},next:{title:"Replicant",permalink:"/docs/classes/replicant"}},l={},c=[{value:"Members",id:"members",level:2},{value:"<em>(static)</em> declaredReplicants",id:"declared-replicants",level:3},{value:"bundleConfig",id:"bundle-config",level:3},{value:"<em>(readonly)</em> bundleGit",id:"bundle-git",level:3},{value:"Properties",id:"properties",level:4},{value:"bundleName",id:"bundle-name",level:3},{value:"bundleVersion",id:"bundle-version",level:3},{value:"extensions",id:"extensions",level:3},{value:"Logger",id:"logger",level:3},{value:"Events",id:"events",level:3}];function a(e){const n={admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"new NodeCG(bundle, socket)"})}),"\n",(0,s.jsx)(n.p,{children:"Creates a new NodeCG API instance. It should never be necessary to use this constructor in a bundle, as NodeCG automatically injects a pre-made API instance."}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"bundle"}),(0,s.jsx)(n.td,{children:"object"}),(0,s.jsx)(n.td,{children:"The bundle object to build an API instance from."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"socket"}),(0,s.jsx)(n.td,{children:"object"}),(0,s.jsx)(n.td,{children:"The Socket.IO socket instance to communicate with."})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"members",children:"Members"}),"\n",(0,s.jsxs)(n.h3,{id:"declared-replicants",children:[(0,s.jsx)(n.em,{children:"(static)"})," declaredReplicants"]}),"\n",(0,s.jsxs)(n.p,{children:["An object containing references to all Replicants that have been declared in this ",(0,s.jsx)(n.code,{children:"window"}),", sorted by bundle. E.g., ",(0,s.jsx)(n.code,{children:"NodeCG.declaredReplicants.myBundle.myRep"})]}),"\n",(0,s.jsx)(n.h3,{id:"bundle-config",children:"bundleConfig"}),"\n",(0,s.jsx)(n.p,{children:"An object containing the parsed content of cfg/<bundle-name>.json, the contents of which are read once when NodeCG starts up. Used to quickly access per-bundle configuration properties."}),"\n",(0,s.jsxs)(n.h3,{id:"bundle-git",children:[(0,s.jsx)(n.em,{children:"(readonly)"})," bundleGit"]}),"\n",(0,s.jsx)(n.p,{children:"Provides information about the current git status of this bundle, if found."}),"\n",(0,s.jsx)(n.h4,{id:"properties",children:"Properties"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Attributes"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"branch"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"What branch this bundle is on."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"hash"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"The full hash of the commit this bundle is on."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"shortHash"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"The short hash of the commit this bundle is on."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"date"}),(0,s.jsx)(n.td,{children:"Date"}),(0,s.jsx)(n.td,{children:"<optional>"}),(0,s.jsx)(n.td,{children:"The date of the commit this bundle is on."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"message"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"<optional>"}),(0,s.jsx)(n.td,{children:"The message of the commit this bundle is on."})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"bundle-name",children:"bundleName"}),"\n",(0,s.jsx)(n.p,{children:"The name of the bundle which this NodeCG API instance is for."}),"\n",(0,s.jsx)(n.h3,{id:"bundle-version",children:"bundleVersion"}),"\n",(0,s.jsx)(n.p,{children:"The version (from package.json) of the bundle which this NodeCG API instance is for."}),"\n",(0,s.jsx)(n.h3,{id:"extensions",children:"extensions"}),"\n",(0,s.jsx)(n.admonition,{title:"Extension Only",type:"important",children:(0,s.jsx)(n.p,{children:"This can only be used in code which runs on the server."})}),"\n",(0,s.jsx)(n.p,{children:"Object containing references to all other loaded extensions. To access another bundle's extension, it must be declared as a bundleDependency in your bundle's manifest."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:'title="bundles/my-bundle/package.json"',children:'{\n    "name": "my-bundle"\n    ...\n    "bundleDependencies": {\n        "other-bundle": "^1.0.0"\n    }\n}\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:'title="bundles/my-bundle/extension.js"',children:"module.exports = function(nodecg) {\n    const otherBundle = nodecg.extensions['other-bundle'];\n    // Now I can use `otherBundle`!\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"logger",children:"Logger"}),"\n",(0,s.jsxs)(n.p,{children:["Type: ",(0,s.jsx)(n.em,{children:"Object"})]}),"\n",(0,s.jsx)(n.p,{children:"Provides easy access to the Logger class. Useful in cases where you want to create your own custom logger."}),"\n",(0,s.jsx)(n.h3,{id:"events",children:"Events"}),"\n",(0,s.jsx)(n.admonition,{title:"Extension Only",type:"important",children:(0,s.jsx)(n.p,{children:"This can only be used in code which runs on the server."})}),"\n",(0,s.jsxs)(n.p,{children:["In your extension code, there are several events emitted on the ",(0,s.jsx)(n.code,{children:"nodecg"})," object that are available to listen to:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"module.exports = function(nodecg) {\n    nodecg.on('extensionsLoaded', () => {\n        // all bundle extensions have finished loading\n        // this event is probably not that necessary because serverStarted is emitted shortly after\n    })\n\n    nodecg.on('serverStarted', () => {\n        // the web and socket.io servers have started and will accept connections\n    })\n\n    nodecg.on('serverStopping', () => {\n        // the server is shutting down and you can perform cleanup operations here\n    })\n\n    nodecg.on('login', (user) => {\n        // a user has logged in\n        // use Intellisense (autocomplete) to explore the other properties available on the `user` object\n        console.log(user.id, user.name);\n    });\n\n    nodecg.on('logout', (user) => {\n        // a user has logged out\n        // use Intellisense (autocomplete) to explore the other properties available on the `user` object\n        console.log(user.id, user.name);\n    });\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},1151:function(e,n,t){t.d(n,{Z:function(){return o},a:function(){return r}});var s=t(7294);const d={},i=s.createContext(d);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);