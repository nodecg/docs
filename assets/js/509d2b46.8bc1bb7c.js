"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4579],{5930:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return i},metadata:function(){return r},toc:function(){return d}});var a=n(5893),s=n(1151);const i={id:"replicant",title:"Replicant",sidebar_label:"Replicant"},l=void 0,r={id:"classes/replicant",title:"Replicant",description:"Replicant(name, namespace, opts)",source:"@site/docs/classes/replicant.md",sourceDirName:"classes",slug:"/classes/replicant",permalink:"/docs/classes/replicant",draft:!1,unlisted:!1,editUrl:"https://github.com/nodecg/docs/edit/main/docs/classes/replicant.md",tags:[],version:"current",lastUpdatedBy:"ElyFura",lastUpdatedAt:1750465668,formattedLastUpdatedAt:"Jun 21, 2025",frontMatter:{id:"replicant",title:"Replicant",sidebar_label:"Replicant"},sidebar:"mainSidebar",previous:{title:"NodeCG",permalink:"/docs/classes/nodecg"},next:{title:"readReplicant",permalink:"/docs/classes/readReplicant"}},c={},d=[{value:"Parameters",id:"parameters",level:3},{value:"Opts",id:"opts",level:4},{value:"Example",id:"example",level:3}];function o(e){const t={a:"a",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:(0,a.jsx)(t.code,{children:"Replicant(name, *namespace, *opts)"})}),"\n",(0,a.jsx)(t.p,{children:"Replicants are objects which monitor changes to a variable's value. The changes are replicated across all extensions, graphics, and dashboard panels. When a Replicant changes in one of those places it is quickly updated in the rest, and a change event is emitted allowing bundles to react to the changes in the data."}),"\n",(0,a.jsx)(t.p,{children:"If a Replicant with a given name in a given bundle namespace has already been declared, the Replicant will automatically be assigned the existing value."}),"\n",(0,a.jsx)(t.p,{children:"Replicants must be declared in each context that wishes to use them. For instance, declaring a replicant in an extension does not automatically make it available in a graphic. The graphic must also declare it."}),"\n",(0,a.jsxs)(t.p,{children:["By default Replicants will be saved to disk, meaning they will automatically be restored when NodeCG is restarted, such as after an unexpected crash. If you need to opt-out of this behaviour simply set ",(0,a.jsx)(t.code,{children:"persistent: false"})," in the ",(0,a.jsx)(t.code,{children:"opts"})," argument."]}),"\n",(0,a.jsxs)(t.p,{children:["As of NodeCG 0.8.4, Replicants can also be automatically validated against a JSON Schema that you provide. See ",(0,a.jsx)(t.a,{href:"/docs/replicant-schemas",children:"Replicant Validation"})," for more information."]}),"\n",(0,a.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Name"}),(0,a.jsx)(t.th,{children:"Type"}),(0,a.jsx)(t.th,{children:"Attributes"}),(0,a.jsx)(t.th,{children:"Description"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"name"}),(0,a.jsx)(t.td,{children:"string"}),(0,a.jsx)(t.td,{}),(0,a.jsx)(t.td,{children:"The name of the replicant."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"namespace"}),(0,a.jsx)(t.td,{children:"string"}),(0,a.jsx)(t.td,{children:"<optional>"}),(0,a.jsx)(t.td,{children:"The namespace to in which to look for this replicant. Defaults to the name of the current bundle."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"opts"}),(0,a.jsx)(t.td,{children:"object"}),(0,a.jsx)(t.td,{children:"<optional>"}),(0,a.jsx)(t.td,{children:"The options for this replicant."})]})]})]}),"\n",(0,a.jsx)(t.h4,{id:"opts",children:"Opts"}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Name"}),(0,a.jsx)(t.th,{children:"Type"}),(0,a.jsx)(t.th,{children:"Attributes"}),(0,a.jsx)(t.th,{children:"Default"}),(0,a.jsx)(t.th,{children:"Description"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"defaultValue"}),(0,a.jsx)(t.td,{children:"any"}),(0,a.jsx)(t.td,{children:"<optional>"}),(0,a.jsx)(t.td,{}),(0,a.jsx)(t.td,{children:"The default value to instantiate this Replicant with. The default value is only applied if this Replicant has not previously been declared and if it has no persisted value."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"persistent"}),(0,a.jsx)(t.td,{children:"boolean"}),(0,a.jsx)(t.td,{children:"<optional>"}),(0,a.jsx)(t.td,{children:"true"}),(0,a.jsx)(t.td,{children:"Whether to persist the Replicant's value to disk on every change. Persisted values are re-loaded on startup."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"persistenceInterval"}),(0,a.jsx)(t.td,{children:"number"}),(0,a.jsx)(t.td,{children:"<optional>"}),(0,a.jsx)(t.td,{children:"100"}),(0,a.jsx)(t.td,{children:"Interval between each persistence, in milliseconds."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"schemaPath"}),(0,a.jsx)(t.td,{children:"string"}),(0,a.jsx)(t.td,{children:"<optional>"}),(0,a.jsx)(t.td,{}),(0,a.jsxs)(t.td,{children:["The filepath at which to look for a JSON Schema for this Replicant. Defaults to ",(0,a.jsx)(t.code,{children:"nodecg/bundles/${bundleName}/schemas/${replicantName}.json"}),". Please note that this default path will be URIEncoded to ensure that it results in a valid filename."]})]})]})]}),"\n",(0,a.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"const myRep = nodecg.Replicant('myRep', {\n    defaultValue: 123\n});\n\nmyRep.on('change', (newValue, oldValue) => {\n    console.log(`myRep changed from ${oldValue} to ${newValue}`);\n});\n\nmyRep.value = 'Hello!';\nmyRep.value = {\n    objects: 'work too!'\n};\nmyRep.value = {\n    objects: {\n        can: {\n            be: 'nested!'\n        }\n    }\n};\nmyRep.value = ['Even', 'arrays', 'work!'];\n"})})]})}function h(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},1151:function(e,t,n){n.d(t,{Z:function(){return r},a:function(){return l}});var a=n(7294);const s={},i=a.createContext(s);function l(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);