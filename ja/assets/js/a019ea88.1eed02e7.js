"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9083],{1685:function(e,n,d){d.r(n),d.d(n,{assets:function(){return l},contentTitle:function(){return a},default:function(){return h},frontMatter:function(){return s},metadata:function(){return t},toc:function(){return r}});var i=d(5893),o=d(1151);const s={id:"manifest",title:"package.json Manifest",sidebar_label:"Manifest"},a=void 0,t={id:"manifest",title:"package.json Manifest",description:"Every bundle must have a package.json. In addition to the required fields",source:"@site/docs/manifest.md",sourceDirName:".",slug:"/manifest",permalink:"/ja/docs/manifest",draft:!1,unlisted:!1,editUrl:"https://github.com/nodecg/docs/edit/main/docs/manifest.md",tags:[],version:"current",lastUpdatedBy:"dependabot[bot]",lastUpdatedAt:1737407026,formattedLastUpdatedAt:"2025\u5e741\u670820\u65e5",frontMatter:{id:"manifest",title:"package.json Manifest",sidebar_label:"Manifest"},sidebar:"mainSidebar",previous:{title:"Concepts and Terminology",permalink:"/ja/docs/concepts-and-terminology"},next:{title:"Configuration",permalink:"/ja/docs/nodecg-configuration"}},l={},r=[{value:"nodecg.compatibleRange",id:"compatible-range",level:2},{value:"nodecg.bundleDependencies",id:"bundle-dependencies",level:2},{value:"nodecg.dashboardPanels",id:"dashboard-panels",level:2},{value:"nodecg.graphics",id:"graphics",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Every bundle must have a ",(0,i.jsx)(n.a,{href:"https://docs.npmjs.com/files/package.json",children:(0,i.jsx)(n.code,{children:"package.json"})}),". In addition to the required fields\nlike ",(0,i.jsx)(n.code,{children:"name"})," and ",(0,i.jsx)(n.code,{children:"version"})," outlined in that link, NodeCG bundles must also have a ",(0,i.jsx)(n.code,{children:"nodecg"})," object in their ",(0,i.jsx)(n.code,{children:"package.json"}),"\nwith some additional properties that tell NodeCG about the bundle and how to load it."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"nodecg"})," object in a bundle's ",(0,i.jsx)(n.code,{children:"package.json"})," must follow this structure:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "name": "example-bundle",\n    ...\n    "nodecg": {\n        "compatibleRange": "~0.7.0",\n        "bundleDependencies": {\n            "other-bundle": "^1.2.1"\n        },\n        "dashboardPanels": [\n            {\n                "name": "sample-panel",\n                "title": "Sample Panel",\n                "width": 2,\n                "headerColor": "#2d4e8a",\n                "file": "sample-panel.html"\n            },\n            {\n                "name": "sample-dialog",\n                "title": "Sample Dialog",\n                "width": 2,\n                "dialog": true,\n                "dialogButtons": [\n                    {\n                        "name": "save",\n                        "type": "confirm"\n                    },\n                    {\n                        "name": "cancel",\n                        "type": "dismiss"\n                    }\n                ],\n                "file": "sample-dialog.html"\n            },\n            {\n                "name": "custom-workspace",\n                "title": "Custom Workspace Panel",\n                "width": 4,\n                "file": "custom-workspace.html",\n                "workspace": "My Workspace"\n            },\n            {\n                "name": "fullbleed-panel",\n                "title": "Fullbleed Panel",\n                "fullbleed": true\n            }\n        ],\n        "graphics": [\n            {\n                "file": "index.html",\n                "width": 1280,\n                "height": 720,\n                "singleInstance": false\n            }\n        ]\n    }\n    ...\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"compatible-range",children:"nodecg.compatibleRange"}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.a,{href:"http://semver.org/",children:"semver"})," range that defines which version(s) of NodeCG this bundle is compatible with.\nThis bundle will not load in NodeCG versions outside the specified range."]}),"\n",(0,i.jsx)(n.p,{children:"This field is required."}),"\n",(0,i.jsx)(n.h2,{id:"bundle-dependencies",children:"nodecg.bundleDependencies"}),"\n",(0,i.jsxs)(n.p,{children:["Formatted identically to npm's ",(0,i.jsx)(n.code,{children:"dependencies"})," field, but behaves differently.\nBundles declared as ",(0,i.jsx)(n.code,{children:"bundleDependencies"})," are not automatically installed.\nThis field's only job is to ensure that dependant bundles are loaded first.\nIn the above example, ",(0,i.jsx)(n.code,{children:"other-bundle"})," would be loaded before ",(0,i.jsx)(n.code,{children:"example-bundle"}),", and if ",(0,i.jsx)(n.code,{children:"other-bundle"})," fails to load\nthen so will ",(0,i.jsx)(n.code,{children:"example-bundle"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["This field is only required if your bundle makes use of the ",(0,i.jsx)(n.a,{href:"/docs/classes/nodecg#extensions",children:(0,i.jsx)(n.code,{children:"nodecg.extensions"})})," API."]}),"\n",(0,i.jsx)(n.h2,{id:"dashboard-panels",children:"nodecg.dashboardPanels"}),"\n",(0,i.jsxs)(n.p,{children:["An array of objects, each object describing an individual dashboard panel or dialog.\nEvery panel and dialog must have a ",(0,i.jsx)(n.code,{children:"name"}),", ",(0,i.jsx)(n.code,{children:"title"}),", and ",(0,i.jsx)(n.code,{children:"file"}),". ",(0,i.jsx)(n.code,{children:"file"})," is relative to the bundle's ",(0,i.jsx)(n.code,{children:"dashboard"})," folder.\n",(0,i.jsx)(n.code,{children:"width"})," is optional, and defaults to ",(0,i.jsx)(n.code,{children:"2"}),". The width scale is arbitrary and may change,\nso you'll want to play around with this number to get the desired width."]}),"\n",(0,i.jsxs)(n.p,{children:["Panels also have an optional ",(0,i.jsx)(n.code,{children:"headerColor"})," property that accepts a hex color string."]}),"\n",(0,i.jsxs)(n.p,{children:["You can split your panels up into multiple ",(0,i.jsx)(n.code,{children:"workspace"}),"s. By default all panels are added to the same workspace.\nIf you'd like to specify a different workspace, simply provide a workspace name as the ",(0,i.jsx)(n.code,{children:"workspace"})," property.\nWorkspaces work across bundles. If ",(0,i.jsx)(n.code,{children:"my-bundle"})," and ",(0,i.jsx)(n.code,{children:"your-bundle"})," both declare a panel in the ",(0,i.jsx)(n.code,{children:"Shared Workspace"}),"\nworkspace, then both of our panels will show up together."]}),"\n",(0,i.jsxs)(n.p,{children:["If you have a really big panel that simply needs to be in its own workspace and have maximized screenspace, give it\nthe ",(0,i.jsx)(n.code,{children:"fullbleed"})," property. Fullbleed panels are put into their own workspace and have no margins around them. This is\ngood for when you have a large, complex UI that you need more fine-grained control over."]}),"\n",(0,i.jsx)("video",{style:{width:"100%"},controls:!0,preload:!0,children:(0,i.jsx)("source",{src:"/vid/Fullbleed.mp4",type:"video/mp4"})}),"\n",(0,i.jsxs)(n.p,{children:["To mark a panel as a dialog, it must have the ",(0,i.jsx)(n.code,{children:"dialog"})," property set to ",(0,i.jsx)(n.code,{children:"true"}),". Dialogs don't immediately display on the\ndashboard, and must be manually invoked. See ",(0,i.jsx)(n.a,{href:"/docs/making-dialogs",children:"Making Dashboard Dialogs"})," for more info.\n(",(0,i.jsx)(n.a,{href:"http://i.imgur.com/xA4mDvF.png",children:"Screenshot of an open dialog"}),")"]}),"\n",(0,i.jsxs)(n.p,{children:["Dialogs have special buttons for confirmation and dismissal, which are defined in the ",(0,i.jsx)(n.code,{children:"dialogButtons"})," property.\nThere are only two types of dialogButton: ",(0,i.jsx)(n.code,{children:"confirm"})," and ",(0,i.jsx)(n.code,{children:"dismiss"}),". When one of these buttons is pressed, a\n",(0,i.jsx)(n.code,{children:"dialog-confirmed"})," or ",(0,i.jsx)(n.code,{children:"dialog-dismissed"})," event is emitted on the dialog's ",(0,i.jsx)(n.code,{children:"document"})," to allow for easy handling with\nless boilerplate."]}),"\n",(0,i.jsx)(n.p,{children:"This field is only required if your bundle has dashboard panels."}),"\n",(0,i.jsx)(n.h2,{id:"graphics",children:"nodecg.graphics"}),"\n",(0,i.jsxs)(n.p,{children:["An array of objects, each object describing a graphic.\nEach graphic must have a ",(0,i.jsx)(n.code,{children:"file"}),", ",(0,i.jsx)(n.code,{children:"width"}),", and ",(0,i.jsx)(n.code,{children:"height"}),". ",(0,i.jsx)(n.code,{children:"file"})," is relative to the bundle's ",(0,i.jsx)(n.code,{children:"graphics"})," folder.\nIf you wish to enforce that your graphic only ever be open in one place at a time, set ",(0,i.jsx)(n.code,{children:"singleInstance"})," to ",(0,i.jsx)(n.code,{children:"true"}),"\n(defaults to ",(0,i.jsx)(n.code,{children:"false"}),")."]}),"\n",(0,i.jsx)(n.p,{children:"This field is only required if your bundle has graphics."})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},1151:function(e,n,d){d.d(n,{Z:function(){return t},a:function(){return a}});var i=d(7294);const o={},s=i.createContext(o);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);